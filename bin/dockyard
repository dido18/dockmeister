#!/usr/bin/env ruby
$:.unshift(File.dirname('../lib'))

require 'dockyard'

DOCKER_COMPOSE_CMD = 'docker-compose --file ./docker-compose.yml'

command = ARGV.first

case command
when 'compose'
  composed = Dockyard::Composer.new('.').compose

  File.open('docker-compose.yml', 'w') { |f| f.write(composed.to_yaml) }
when 'build'
  #Dockyard::ScriptRunner.new('.').pre_compose!

  #exec("#{DOCKER_COMPOSE_CMD} build")
when 'up'
  exec("#{DOCKER_COMPOSE_CMD} up")

  #after scripts
else
  puts 'Usage information: '\
    "dockyard [METHOD] \n\n"\
    "Available commands\n"\
    "- compose: Prepares a composition of all the configured services\' \"docker-compose.yml\" files\n"\
    "- build: Builds the containers using \"docker-compose build\" \n"\
    "- up: Starts the containers using \"docker-compose up\" \n"\
end
